/**
 * 
 */
package analysis;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;

import flow.Asg;
import flow.Block;
import flow.Cond;
import aexp.AExp;
import aexp.RD;
import aexp.Variable;

/**
 * @author grp6
 *
 */
public class DU extends Analysis<RD>{
	
	Variable get_var_block(Block b){
		
		if( b instanceof Asg){
			return ((Asg) b).getVar();
		}
		
		if( b instanceof Cond){
			return null;
		}
	
		if( b instanceof flow.Skip){
			return null;
		}
		
		return null;
	}
	
	public Map<Integer,Set<RD>> compute(Map<Integer,Set<RD>> rd_entry){
		
		Map<Integer,Set<RD>> DU = new HashMap<Integer, Set<RD>>();
		
		Iterator<Entry<Integer,Block>> it = blocks.entrySet().iterator();
		Entry<Integer,Block> entry;
		
		while(it.hasNext()){
			// x:=x+y :: Block by Block ::
			Set<Variable> block_fv = new HashSet<Variable>();
			
			entry = it.next();
			Block block = entry.getValue();
			Integer node = entry.getKey();
			
		}
		
		System.out.println("\n DU :\n" +DU);
		return DU;
		
	}

}
